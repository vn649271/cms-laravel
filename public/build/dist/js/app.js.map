{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["$(function() {\n    // App setup\n    window.LavaLite = {};\n\n    // Global Ajax Setup\n    $.ajaxPrefilter(function(options, originalOptions, jqXHR) {\n\n        if (! options.beforeSend) {\n            options.beforeSend = function(xhr) {\n                jqXHR.setRequestHeader('Accept', 'application/json; charset=utf-8');\n                jqXHR.setRequestHeader('Content-Type', 'application/json');\n            };\n        }\n\n        var token;\n        if (! options.crossDomain) {\n            token = $('meta[name=\"lavalite:token\"]').attr('content');\n            if (token) {\n                jqXHR.setRequestHeader('X-CSRF-Token', token);\n            }\n        }\n\n        return jqXHR;\n    });\n\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n        statusCode: {\n            401: function() {\n                (new LavaLite.Notifier()).notify('You need to be logged in to perform that action. Perhaps your session has expired.');\n            },\n            403: function() {\n                (new LavaLite.Notifier()).notify('Sorry, but you don\\'t have permission to perform that action.');\n            }\n        }\n    });\n\n    $('body').tooltip({ selector: '[data-toggle=\"tooltip\"]' });\n    $('.js-time-ago').timeago();\n\n    function makeRequest (method, target) {\n        if (method === 'GET') {\n            window.location.href = target;\n            return;\n        }\n\n        var token = $('meta[name=\"lavalite:token\"]').attr('content');\n\n        var  methodForm = '\\n';\n        methodForm += '<form action=\"' + target + '\" method=\"POST\" style=\"display:none\">\\n';\n        methodForm += '<input type=\"hidden\" name=\"_method\" value=\"' + method + '\">\\n';\n        methodForm += '<input type=\"hidden\" name=\"_token\" value=\"' + token + '\">\\n';\n        methodForm += '</form>\\n';\n\n        $(methodForm).appendTo('body').submit();\n    }\n\n    $('body').on('click', '[data-method]', function(e) {\n        e.preventDefault();\n\n        var $a = $(this);\n\n        makeRequest($a.data('method'), $a.attr('href'));\n    });\n\n    LavaLite.globals = {\n        host: window.location.host,\n        base_url: window.location.protocol + '//' + window.location.host,\n        url: document.URL,\n        user: $('meta[name=\"lavalite:user\"]').attr('content')\n    };\n\n    LavaLite.Events = {};\n    LavaLite.Listeners = {};\n\n    LavaLite.Notifier = function() {\n        this.notify = function(message, type, options) {\n            type = (typeof type === 'undefined' || type === 'error') ? 'danger' : type;\n            var $alertsHolder = $('.alerts');\n\n            var defaultOptions = {\n                dismiss: false,\n            };\n\n            options = _.extend(defaultOptions, options);\n\n            var alertTpl = _.template('<div class=\"alert alert-<%= type %> lavalite-alert\"><div class=\"container\"><a class=\"close\" data-dismiss=\"alert\">Ã—</a><%= message %></div></div>');\n            $alertsHolder.html(alertTpl({message: message, type: type}));\n\n            $('html, body').animate({\n                scrollTop: $('body').offset().top\n            }, 500);\n        };\n    };\n\n    LavaLite.Pusher = (function() {\n        var instance;\n\n        function createInstance() {\n            return new Pusher($('meta[name=\"lavalite:pusher\"]').attr('content'));\n        }\n\n        return {\n            getInstance: function() {\n                if (! instance) {\n                    instance = createInstance();\n                }\n                return instance;\n            },\n            getChannel: function(ch) {\n                return this.getInstance().subscribe(ch);\n            }\n        };\n    })();\n\n    new Vue({\n        el: '#app'\n    });\n});\n"],"sourceRoot":"/source/"}